# @package _global_

experiment: "HEAT_SDAMI_alternateheat_beam1ctc02_oracle"

model:
  whisper_model: "openai/whisper-large-v3-turbo"
  # reinit_encoder_from: ${oc.env:PRETRAINED_CTC_MODELS_PATH}/${model.whisper_model}_ctc-pretrain_libri/model.safetensors
  # reinit_from: "/export/fs06/xhe69/TS-ASR-Whisper/exp/HEAT_ASSIGNkeepchannelmaxlastsegend_fix1_MD/checkpoint-5844/model.safetensors"
  # reinit_from: "/export/fs06/xhe69/TS-ASR-Whisper/exp/DEFAULT_DICOW_MD_fixeddata/checkpoint-9988/model.safetensors"
  reinit_from: "/export/fs06/xhe69/TS-ASR-Whisper/exp/HEAT_ASSIGNkeepchannel_MD_fixeddata/checkpoint-7596/model.safetensors"
  # reinit_from: "/export/fs06/xhe69/TS-ASR-Whisper/exp/HEAT_ASSIGNkeepchannel/checkpoint-4946/model.safetensors"
  # reinit_from: "/export/fs06/xhe69/TS-ASR-Whisper/exp/HEAT_ASSIGNkeepchannel_MD/checkpoint-8766/model.safetensors"
  # reinit_from: "/export/fs06/xhe69/TS-ASR-Whisper/exp/DEFAULT_DICOW_MD_rerun/checkpoint-11157/model.safetensors"
  # reinit_from: "/export/fs06/xhe69/TS-ASR-Whisper/exp/HEAT_MD_JOINER_v10/checkpoint-380/model.safetensors"
  # reinit_from: "/export/fs06/xhe69/TS-ASR-Whisper/exp/HEAT_SDAMI_JOINER_v26/checkpoint-50000/model.safetensors"
  # reinit_from: "/export/fs06/xhe69/TS-ASR-Whisper/exp/HEAT_ASSIGNstandard/checkpoint-4185/model.safetensors"
  # reinit_from: "/export/fs06/xhe69/TS-ASR-Whisper/exp/HEAT_ASSIGNalternate/checkpoint-1522/model.safetensors"
  # use_channel_joiner: true

data:
  # eval_cutsets: ${oc.env:MANIFEST_DIR}/ami-sdm_test_sc_cutset.jsonl.gz
  # dev_cutsets: ${oc.env:MANIFEST_DIR}/ami-sdm_test_sc_cutset.jsonl.gz
  # eval_diar_cutsets: "/export/fs06/xhe69/TS-ASR-Whisper/diar_exp/diarizen_large/diarized_cutsets/ami-sdm_test_sc_cutset.jsonl.gz"
  # dev_diar_cutsets: "/export/fs06/xhe69/TS-ASR-Whisper/diar_exp/diarizen_large/diarized_cutsets/ami-sdm_test_sc_cutset.jsonl.gz"
  audio_path_prefix: ${oc.env:AUDIO_PATH_PREFIX}
  audio_path_prefix_replacement: ${oc.env:AUDIO_PATH_PREFIX_REPLACEMENT}
  use_heat_diar: true
  oracle_heat_assignment_method: "alternate"
  # diar_type: "hard"
training:
  decode_only: true
  eval_metrics_list: [ "tcorc_wer" ]
  # generation_num_beams: 5
decoding:
  decoding_ctc_weight: 0.2
  condition_on_prev: false
  # length_penalty: 0.1
